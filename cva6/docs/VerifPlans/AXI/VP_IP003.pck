(VBurst
p0
ccopy_reg
_reconstructor
p1
(cvp_pack
Ip
p2
c__builtin__
object
p3
Ntp4
Rp5
(dp6
Vprop_count
p7
I2
sVname
p8
g0
sVprop_list
p9
(dp10
sVip_num
p11
I5
sVwid_order
p12
I5
sVrfu_dict
p13
(dp14
sVrfu_list
p15
(lp16
(V000_Control_Signals
p17
g1
(cvp_pack
Prop
p18
g3
Ntp19
Rp20
(dp21
Vitem_count
p22
I12
sg8
g17
sVtag
p23
VVP_IP005_P000
p24
sVitem_list
p25
(dp26
sg12
I0
sg15
(lp27
(V000
p28
g1
(cvp_pack
Item
p29
g3
Ntp30
Rp31
(dp32
g8
V000
p33
sg23
VVP_IP005_P000_I000
p34
sVdescription
p35
VAll transaction performed by CVA6 are of type INCR. AxBURST = 0b01
p36
sVpurpose
p37
VAXI Design doc - Address structure
p38
sVverif_goals
p39
VEnsure AxBURST == 0b01 is never false.\u000a\u000aCover the case where AxBURST == 0b01 is false.
p40
sVcoverage_loc
p41
V
p42
sVpfc
p43
I4
sVtest_type
p44
I3
sVcov_method
p45
I2
sVcores
p46
I56
sVcomments
p47
g42
sVstatus
p48
g42
sVsimu_target_list
p49
(lp50
sg15
(lp51
sVrfu_list_2
p52
(lp53
sg13
(dp54
Vlock_status
p55
I0
ssbtp56
a(V001
p57
g1
(g29
g3
Ntp58
Rp59
(dp60
g8
V001
p61
sg23
VVP_IP005_P000_I001
p62
sg35
VAll Read transaction performed by CVA6 are of burst lenght less or equal to ICACHE_LINE_WIDTH/64. ARLEN = 0b01 or 0b00
p63
sg37
VAXI Design doc - Address structure
p64
sg39
VEnsure ARLEN == 0b01 || ARLEN == 0b00 is never false.\u000a\u000aCover the case where ARLEN == 0b01 || ARLEN == 0b00 is false.
p65
sg41
g42
sg43
I4
sg44
I3
sg45
I2
sg46
I56
sg47
g42
sg48
g42
sg49
(lp66
sg15
(lp67
sg52
(lp68
sg13
(dp69
g55
I0
ssbtp70
a(V002
p71
g1
(g29
g3
Ntp72
Rp73
(dp74
g8
V002
p75
sg23
VVP_IP005_P000_I002
p76
sg35
VAll write transaction performed by CVA6 are of burst lenght equal to 1. AWLEN = 0b00
p77
sg37
VAXI Design doc - Address structure
p78
sg39
VEnsure AWLEN == 0b00 is never false.\u000a\u000aCover the case where AWLEN == 0b00 is false.
p79
sg41
g42
sg43
I4
sg44
I3
sg45
I2
sg46
I56
sg47
g42
sg48
g42
sg49
(lp80
sg15
(lp81
sg52
(lp82
sg13
(dp83
g55
I0
ssbtp84
a(V003
p85
g1
(g29
g3
Ntp86
Rp87
(dp88
g8
V003
p89
sg23
VVP_IP005_P000_I003
p90
sg35
VThe size of a read transfer does not exceed the width of the data interface. The maximum value can be taking by AxSIZE is 3.
p91
sg37
Vhttps://developer.arm.com/documentation/ihi0022/hc - (Section A3.4.1)
p92
sg39
VCheck to ensure that AxSIZE is less or equal to log2(AXI_DATA_WIDTH/8)
p93
sg41
g42
sg43
I4
sg44
I3
sg45
I2
sg46
I56
sg47
g42
sg48
g42
sg49
(lp94
sg15
(lp95
sg52
(lp96
sg13
(dp97
g55
I0
ssbtp98
a(V007
p99
g1
(g29
g3
Ntp100
Rp101
(dp102
g8
V007
p103
sg23
VVP_IP005_P000_I007
p104
sg35
VExclusive access transactions cannot have a length greater than 16 beats
p105
sg37
Vhttps://developer.arm.com/documentation/ihi0022/hc - (Section A7.2.4)
p106
sg39
VEnsure AxLOCK && AxLEN > 15 is never true.\u000a\u000aCover the case where AxLOCK && AxLEN > 15 is false.
p107
sg41
g42
sg43
I4
sg44
I3
sg45
I2
sg46
I56
sg47
g42
sg48
g42
sg49
(lp108
sg15
(lp109
sg52
(lp110
sg13
(dp111
Vlock_status
p112
I0
ssbtp113
a(V009
p114
g1
(g29
g3
Ntp115
Rp116
(dp117
g8
V009
p118
sg23
VVP_IP005_P000_I009
p119
sg35
Vthe write data is 1, 2, 4 or 8 bytes for AtomicLoad and AtomicSwap operations
p120
sg37
g42
sg39
VCheck to ensure that the AWLEN * AWSIZE is equal to 1, 2, 4 or 8
p121
sg41
g42
sg43
I4
sg44
I3
sg45
I2
sg46
I24
sg47
g42
sg48
g42
sg49
(lp122
sg15
(lp123
sg52
(lp124
sg13
(dp125
Vlock_status
p126
I0
ssbtp127
asVrfu_list_1
p128
(lp129
sg52
(lp130
sg13
(dp131
sbtp132
a(V001_Dependency
p133
g1
(g18
g3
Ntp134
Rp135
(dp136
g22
I16
sg8
g133
sg23
VVP_IP005_P001
p137
sg25
(dp138
sg12
I1
sg15
(lp139
(V001
p140
g1
(g29
g3
Ntp141
Rp142
(dp143
g8
V001
p144
sg23
VVP_IP005_P001_I001
p145
sg35
VThe number of write data items matches AWLEN for the corresponding address
p146
sg37
Vhttps://developer.arm.com/documentation/ihi0022/hc - (Section A3.4.1)
p147
sg39
VCheck to ensure that:\u000aThe Master assert the WLAST signal,  when the WDATA count is equal to AWLEN\u000aThe Master don't assert the WLAST, when the WDATA count is not equal to AWLEN
p148
sg41
g42
sg43
I4
sg44
I3
sg45
I2
sg46
I56
sg47
g42
sg48
g42
sg49
(lp149
sg15
(lp150
sg52
(lp151
sg13
(dp152
g112
I0
ssbtp153
a(V002
p154
g1
(g29
g3
Ntp155
Rp156
(dp157
g8
V002
p158
sg23
VVP_IP005_P001_I002
p159
sg35
VWrite strobes must only be asserted for the correct byte lanes
p160
sg37
Vhttps://developer.arm.com/documentation/ihi0022/hc - (Section A3.4.4)
p161
sg39
VCheck to ensure that the strobe bits associated to the lanes that do not contain valid data are equal to zero.\u000a\u000aFor the other bits of the strob can take any value.
p162
sg41
g42
sg43
I4
sg44
I3
sg45
I2
sg46
I56
sg47
g42
sg48
g42
sg49
(lp163
sg15
(lp164
sg52
(lp165
sg13
(dp166
g112
I0
ssbtp167
a(V003
p168
g1
(g29
g3
Ntp169
Rp170
(dp171
g8
V003
p172
sg23
VVP_IP005_P001_I003
p173
sg35
VAll write transaction addresses are matched with a corresponding buffered response
p174
sg37
Vhttps://developer.arm.com/documentation/ihi0022/hc - (Section A3.4.5)
p175
sg39
Vcheck to ensure that after every write request a response handshake ocure in an unspecified delay with the same ID of the write request.
p176
sg41
g42
sg43
I4
sg44
I4
sg45
I2
sg46
I56
sg47
g42
sg48
g42
sg49
(lp177
sg15
(lp178
sg52
(lp179
sg13
(dp180
g112
I0
ssbtp181
a(V004
p182
g1
(g29
g3
Ntp183
Rp184
(dp185
g8
V004
p186
sg23
VVP_IP005_P001_I004
p187
sg35
VAn EXOKAY response can only be given to an exclusive access
p188
sg37
Vhttps://developer.arm.com/documentation/ihi0022/hc - (Section A7.2)
p189
sg39
VCheck to ensure that an EXOKAY response occur only if there are an outstanding exclusive transaction with an ID that match the response ID
p190
sg41
g42
sg43
I4
sg44
I3
sg45
I2
sg46
I56
sg47
g42
sg48
g42
sg49
(lp191
sg15
(lp192
sg52
(lp193
sg13
(dp194
g112
I0
ssbtp195
a(V005
p196
g1
(g29
g3
Ntp197
Rp198
(dp199
g8
V005
p200
sg23
VVP_IP005_P001_I005
p201
sg35
VThe read data must always follow the address that it relates to.
p202
sg37
Vhttps://developer.arm.com/documentation/ihi0022/hc - (Section A5.2)
p203
sg39
VCheck to ensure that a read data occur if there are an outstanding read transaction with an ID that match the the transaction request ID
p204
sg41
g42
sg43
I4
sg44
I3
sg45
I2
sg46
I56
sg47
g42
sg48
g42
sg49
(lp205
sg15
(lp206
sg52
(lp207
sg13
(dp208
g112
I0
ssbtp209
a(V006
p210
g1
(g29
g3
Ntp211
Rp212
(dp213
g8
V006
p214
sg23
VVP_IP005_P001_I006
p215
sg35
VThe number of read data items must match the corresponding ARLEN.
p216
sg37
Vhttps://developer.arm.com/documentation/ihi0022/hc - (Section A3.4.1)
p217
sg39
VCheck to ensure that the subordinate assert the RLAST signal when it is driving the final read transfer in the burst\u000a\u000aCheck to ensure that the read burst not terminate early
p218
sg41
g42
sg43
I4
sg44
I3
sg45
I2
sg46
I56
sg47
g42
sg48
g42
sg49
(lp219
sg15
(lp220
sg52
(lp221
sg13
(dp222
g112
I0
ssbtp223
a(V007
p224
g1
(g29
g3
Ntp225
Rp226
(dp227
g8
V007
p228
sg23
VVP_IP005_P001_I007
p229
sg35
VAll outstanding read bursts must have completed.
p230
sg37
Vhttps://developer.arm.com/documentation/ihi0022/hc - (Section A3.4.1)
p231
sg39
VCheck to ensure that the RLAST counter is equal to handshake counter.
p232
sg41
g42
sg43
I4
sg44
I3
sg45
I2
sg46
I56
sg47
g42
sg48
g42
sg49
(lp233
sg15
(lp234
sg52
(lp235
sg13
(dp236
g112
I0
ssbtp237
a(V008
p238
g1
(g29
g3
Ntp239
Rp240
(dp241
g8
V008
p242
sg23
VVP_IP005_P001_I008
p243
sg35
Vif an atomic operation has a burst length greater than one, AWSIZE is full data bus width
p244
sg37
g42
sg39
VEnsure that AWLEN > 0 &&  AWSIZE == AXI_DATA_WIDTH is always true\u000a\u000aCover the case where AWLEN > 0 &&  AWSIZE == AXI_DATA_WIDTH  is false.
p245
sg41
g42
sg43
I4
sg44
I3
sg45
I2
sg46
I24
sg47
g42
sg48
g42
sg49
(lp246
sg15
(lp247
sg52
(lp248
sg13
(dp249
g126
I0
ssbtp250
a(V009
p251
g1
(g29
g3
Ntp252
Rp253
(dp254
g8
V009
p255
sg23
VVP_IP005_P001_I009
p256
sg35
VAn atomic operation has an AWADDR is aligned to the data size for AtomicStore, AtomicLoad, and AtomicSwap
p257
sg37
g42
sg39
VEnsure that AWADDRE is always aligned to AWSIZE is always true
p258
sg41
g42
sg43
I4
sg44
I3
sg45
I2
sg46
I24
sg47
g42
sg48
g42
sg49
(lp259
sg15
(lp260
sg52
(lp261
sg13
(dp262
g126
I0
ssbtp263
a(V012
p264
g1
(g29
g3
Ntp265
Rp266
(dp267
g8
V012
p268
sg23
VVP_IP005_P001_I012
p269
sg35
VID used to identify an Atomic transactions has not been used for other transactions that are outstanding at the same time
p270
sg37
g42
sg39
g42
sg41
g42
sg43
I4
sg44
I3
sg45
I2
sg46
I24
sg47
g42
sg48
g42
sg49
(lp271
sg15
(lp272
sg52
(lp273
sg13
(dp274
g126
I0
ssbtp275
a(V013
p276
g1
(g29
g3
Ntp277
Rp278
(dp279
g8
V013
p280
sg23
VVP_IP005_P001_I013
p281
sg35
VFor AtomicStore, AtomicLoad, and AtomicSwap, the write data is 1, 2, 4, or 8 bytes and read data is 1, 2, 4, or 8 bytes respectively.
p282
sg37
g42
sg39
VCheck to ensure that read data that is not preceded by an outstanding read address with the same ID, have the same size as an outstanding transaction that have the same ID
p283
sg41
g42
sg43
I4
sg44
I3
sg45
I2
sg46
I24
sg47
g42
sg48
g42
sg49
(lp284
sg15
(lp285
sg52
(lp286
sg13
(dp287
g126
I0
ssbtp288
a(V015
p289
g1
(g29
g3
Ntp290
Rp291
(dp292
g8
V015
p293
sg23
VVP_IP005_P001_I015
p294
sg35
VFor AtomicLoad, AtomicStore and AtomicSwap, the original data value at the addressed location is returned in read data channel
p295
sg37
g42
sg39
VCheck to ensure that read data that is not preceded by an outstanding read address with the same ID, must be preceded by an outstanding atomic transaction that have the same ID
p296
sg41
g42
sg43
I4
sg44
I3
sg45
I2
sg46
I24
sg47
g42
sg48
g42
sg49
(lp297
sg15
(lp298
sg52
(lp299
sg13
(dp300
g126
I0
ssbtp301
asg128
(lp302
sg52
(lp303
sg13
(dp304
sbtp305
asVrfu_list_0
p306
(lp307
sg128
(lp308
sVvptool_gitrev
p309
V$Id$
p310
sbtp311
.